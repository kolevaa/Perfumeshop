@model Perfumeshop.Models.Order

@{
    ViewData["Title"] = "Edit";
}

<h1 class="text-center">Edit Order</h1>

<hr />
<div class="row justify-content-center">
    <div class="col-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="UserId" class="control-label">User Name</label>
                <select asp-for="UserId" class="form-control" asp-items="ViewBag.UserId" readonly="@(true)"></select>
                <span asp-validation-for="UserId" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <label class="control-label">Book</label>
                <select asp-for="PerfumeId" class="form-control" asp-items="ViewBag.PerfumeId" readonly="@(true)">Perfume</select>
                <span asp-validation-for="PerfumeId" class="text-danger"></span>
            </div>
            <div class="form-group text-center">
                <hr />
                @if (@ViewBag.Status == "Pending Approval")
                {
                    <input type="submit" value="Approve" class="btn btn-outline-secondary" />
                }
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
